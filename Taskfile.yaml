version: '3'

vars:
  GOOS: "{{OS}}"

tasks:

  test:
    cmds:
      - go test ./...

  build:
    cmds:
      - task: build:{{OS}}

  build:windows:
    cmds:
      - go env -w GOOS=windows GOARCH=amd64
      - go build -o bin/mq-watch.exe ./main.go

  build:darwin:
    cmds:
      - go env -w GOOS=darwin GOARCH=amd64
      - go build -o bin/mq-watch ./main.go

  build:linux:
    cmds:
      - go env -w GOOS=linux GOARCH=amd64
      - go build -o bin/mq-watch ./main.go

  run:
    cmds:
      - task: build:{{OS}}
      - task: run:{{OS}}
        vars:
          ARGS: "{{.CLI_ARGS}}"

  run:darwin:
    cmds:
      - bin/mq-watch -config examples/config.yaml {{.ARGS}}
  run:linux:
    cmds:
      - bin/mq-watch -config examples/config.yaml {{.ARGS}}
  run:windows:
    cmds:
      - bin/mq-watch.exe -config examples/config.yaml {{.ARGS}}

  lint:
    cmds:
      - golangci-lint run ./... -v --timeout 5m

  scan:
    cmds:
      - gosec -conf .gosec.config.json "./..."

  tools:install:golangci-lint:
    desc: Install golangci-lint
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

  tools:install:gosec:
    desc: Install gosec
    cmds:
      - go install github.com/securego/gosec/v2/cmd/gosec@latest

  container:up:
    cmds:
      - task: container:up:mosquitto
      - task: container:up:influxdb

  containers:up:mosquitto:
    cmds:
      - docker run -d --name mosquitto -p 1883:1883 -p 9001:9001 eclipse-mosquitto

  containers:up:influxdb:
    cmds:
      - docker run -d --name influxdb -p 8086:8086 influxdb

  containers:down:
    cmds:
      - docker stop mosquitto influxdb
      - docker rm mosquitto influxdb

  containers:down:mosquitto:
    cmds:
      - docker stop mosquitto
      - docker rm mosquitto

  containers:down:influxdb:
    cmds:
      - docker stop influxdb
      - docker rm influxdb
